{"fileName":"/contracts/SafeMath.sol","name":"SafeMath","abi":[],"opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x0 JUMPI JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x16 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x0 JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 MSTORE8 0xea DIV 0xdd LOG2 0xef 0xea SWAP6 DUP7 0x22 0xeb DUP7 0x21 0xf7 0xfd 0xc 0x2d 0xa9 SWAP10 0x22 0x2b 0x46 COINBASE 0xe1 0xd7 0xad DUP12 DIFFICULTY 0xe2 ADD PUSH19 0x39002900000000000000000000000000000000 ","source":"pragma solidity ^0.4.8;\n\nlibrary SafeMath {\n\n  function assert(bool assertion) internal {\n    if (!assertion) {\n      throw;\n    }\n  }\n\n  function safeSub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n}\n","abiDocs":[]}
