{"fileName":"/contracts/SafeMath.sol","name":"SafeMath","abi":[],"opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x0 JUMPI JUMPDEST PUSH1 0x35 DUP1 PUSH1 0x16 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x0 JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 JUMP SWAP1 0x29 0xac 0xb4 LOG4 CALLVALUE GASPRICE 0x27 PUSH23 0x2C1B1986937D5743CDE98170ABCC98FD15B608322BC700 0x29 ","source":"pragma solidity ^0.4.8;\n\nlibrary SafeMath {\n\n  function assert(bool assertion) internal {\n    if (!assertion) {\n      throw;\n    }\n  }\n\n  function safeSub(uint a, uint b) internal returns (uint) {\n    assert(b <= a);\n    return a - b;\n  }\n\n  function safeAdd(uint a, uint b) internal returns (uint) {\n    uint c = a + b;\n    assert(c>=a && c>=b);\n    return c;\n  }\n\n  function safeMul(uint a, uint b) internal returns (uint) {\n    uint c = a * b;\n    assert(a == 0 || c / a == b);\n    return c;\n  }\n}\n","abiDocs":[]}
